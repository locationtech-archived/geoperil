version: '3.7'

services:
  nginx:
    image: geoperil-nginx
    build:
      context: ../backend/nginx
      dockerfile: Dockerfile.dev
    container_name: geoperil-nginx
    depends_on:
      - geoperil-frontend
      - geoperil-wsgi
    networks:
      - apis
    ports:
      - 8080:8080

  mongo:
    image: mongo:3.6.12
    container_name: geoperil-mongo
    ports:
      - 27017:27017 # TODO: remove in production
    volumes:
      - mongo-data-volume:/data/db
    networks:
      - mongo

  mongo-initial-data:
    image: geoperil-mongo-initial-data
    build:
      context: ../backend/mongo-initial-data
      dockerfile: Dockerfile
    container_name: geoperil-mongo-initial-data
    depends_on:
      - mongo
    networks:
      - mongo
    environment:
      - MONGO_HOST=mongo
      - MONGO_DB=geoperil

  geoperil-frontend:
    # nuxt server with port 3000
    build:
      context: ../frontend
      dockerfile: Dockerfile.dev
    image: geoperil-frontend
    container_name: geoperil-frontend
    volumes:
      - ../frontend:/opt/geoperil-frontend
    networks:
      - apis
    environment:
      HOST: 0.0.0.0
      WEBGUISRV_URL: http://localhost:8080/webguisrv/

  geoperil-wsgi:
    build:
      context: ../backend/wsgi
      dockerfile: Dockerfile.dev
    environment:
      - DEVELOPMENT=1
    image: geoperil-wsgi
    container_name: geoperil-wsgi
    volumes:
      - ../backend/wsgi:/srv/geoperil/wsgi
      - geoperil-data-volume:/geoperil
    depends_on:
      - mongo
      - geoperil-easywave-worker-cpu
    networks:
      - apis
      - mongo
      - worker

  # geoperil-eventfeeder:
  #   build:
  #     context: ../backend/eventfeeder
  #     dockerfile: Dockerfile
  #   image: geoperil-eventfeeder
  #   container_name: geoperil-eventfeeder
  #   depends_on:
  #     - nginx
  #   networks:
  #     - apis
  #   environment:
  #     - FEEDERSRV_URL=http://nginx:8080/feedersrv/feedhazardevent

  geoperil-db-manager:
    build:
      context: ../backend/db-manager
      dockerfile: Dockerfile
    image: geoperil-db-manager
    container_name: geoperil-db-manager
    depends_on:
      - mongo
      - nginx
    networks:
      - mongo
      - apis
    environment:
      - MONGO_CONNECTION=mongodb://mongo:27017
      - DATA_INSERT_URL=http://nginx:8080/webguisrv/data_insert

  geoperil-slm:
    build:
      context: ../backend/sealevelmonitoring
      dockerfile: Dockerfile
    image: geoperil-slm
    container_name: geoperil-slm
    depends_on:
      - nginx
    networks:
      - apis
    environment:
      - FEEDERSRV_URL=http://nginx:8080/feedersrv
      - DEVELOPMENT=1

  global-grid-datasets:
    image: git.gfz-potsdam.de:5000/geoperil/global-grid-datasets:20210106
    container_name: geoperil-grids
    volumes:
      - grid-data-volume:/data

  geoperil-easywave-worker-cpu:
    build:
      context: ../backend/worker/easywaveCPU
      dockerfile: Dockerfile.dev
    image: geoperil-easywave-worker-cpu
    container_name: geoperil-easywave-worker-cpu
    environment:
      - DEVELOPMENT=1
      - SERVER_URL=http://geoperil-easywave-worker-cpu:5000/wps
      - OUTPUT_URL=http://geoperil-easywave-worker-cpu:5000/outputs/
    ports:
      - 5000:5000 # TODO: remove in production
    volumes:
      - ../backend/worker/easywaveCPU/wps:/srv/wps
      - grid-data-volume:/data
    networks:
      - worker
    depends_on:
      - global-grid-datasets

volumes:
  mongo-data-volume:
  grid-data-volume:
  geoperil-data-volume:

networks:
  worker:
  apis:
  mongo:
